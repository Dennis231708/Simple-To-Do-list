{"ast":null,"code":"var _jsxFileName = \"/Users/denniswells/Desktop/Projects/ReactCCApp/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // Fetch task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; // AddTask\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random()*10000)+1\n    // const newTask = {id,...task}\n    // setTasks([...tasks, newTask])\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this) : 'You have no Current Tasks!', /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Footer","Tasks","AddTask","About","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["/Users/denniswells/Desktop/Projects/ReactCCApp/react-task-tracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n  \n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n// Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data \n  }\n\n// Fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data \n  }\n\n// AddTask\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n\n  // const id = Math.floor(Math.random()*10000)+1\n  // const newTask = {id,...task}\n  // setTasks([...tasks, newTask])\n}\n\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method:'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n\n    setTasks(tasks.map((task) => task.id === id ? \n    {...task, reminder: data.reminder} : task))\n  }\n\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}\n      onToggle ={toggleReminder}/> : 'You have no Current Tasks!'}\n      <Footer/>\n    </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}